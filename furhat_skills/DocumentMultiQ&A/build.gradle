plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'kotlin'

// Defines what version of Java to use.
sourceCompatibility = 1.8

// Defines how Kotlin should compile.
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/releases" }
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

dependencies {
    implementation 'com.furhatrobotics.furhatos:furhat-commons:2.7.0'
    implementation 'com.furhatrobotics.assets:StandardLibraryCollection:1.2.0'

    // Additional dependencies for HTTP calls, JSON processing, and coroutines
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "org.json:json:20210307"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
}

jar {
    Properties properties = new Properties()
    properties.load(project.file('skill.properties').newDataInputStream())
    manifest.attributes(
            'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
            'Main-Class': properties.getProperty("mainclass")
    )
}

// ShadowJar depends on jar being finished properly.
shadowJar {
    Properties properties = new Properties()
    properties.load(project.file('skill.properties').newDataInputStream())
    def version = properties.getProperty('version')
    def name = properties.getProperty('name')
    archiveName = "${name}_${version}.skill"

    manifest {
        exclude '**/Log4j2Plugins.dat'
        exclude '**/node_modules'
    }
    from "skill.properties"
    from "assets"
    extension 'skill'
}
